//
// Created by Jhean Lee on 2025/1/28.
//

#ifndef SPHERE_LINKED_CONSOLE_HPP
  #define SPHERE_LINKED_CONSOLE_HPP

  #include <string>

  enum Level {
    ERROR,
    WARNING,
    NOTICE,
    INFO,
    DEBUG,
    INSTRUCTION,
  };

  enum Code {
    //  connection
    SOCK_CREATE_FAILED,
    SOCK_CONNECT_FAILED,
    SOCK_POLL_ERR,

    SSL_CONNECT_FAILED,
    SSL_CREATE_CONTEXT_FAILED,

    //  option
    OPTION_UNKNOWN,
    OPTION_SERVICE_PORT_NOT_SET,
    OPTION_TOKEN_NOT_SET,
    RESOLVE_HOST_FAILED,
    PORT_INVALID_CHARACTER,
    PORT_INVALID_RANGE,

    INFO_HOST,
    INFO_SERVICE,

    //  message
    MESSAGE_SEND_FAILED,
    MESSAGE_RECV_FAILED,
    MESSAGE_LOAD_FAILED,
    MESSAGE_DUMP_FAILED,
    BUFFER_SEND_ERROR_TO_SERVICE,
    BUFFER_SEND_ERROR_TO_HOST,

    //  tunnel
    CONNECTED_TO_HOST,
    CONNECTED_TO_SERVICE,
    CONNECTED_FOR_ID,
    CONNECTION_CLOSED,
    CONNECTION_CLOSED_BY_SERVICE,
    CONNECTION_CLOSED_BY_HOST,
    STREAM_PORT_OPENED,
    NO_PORTS_AVAILABLE,
    PROXYING_STARTED,
    PROXYING_ENDED,
    AUTHENTICATION_REQUEST_SENT,
    AUTHENTICATION_FAILED,
    AUTHENTICATION_SUCCESS,
    SHA256_FAILED,
    SERVER_DATABASE_ERROR,

    HOST_RESPONSE_TIMEOUT,

    //  token
    ENTER_TOKEN_INSTRUCTION,
    INVALID_TOKEN,

    SIGNAL,

    DEBUG_MSG,
  };

  void console(Level level, Code code, const char *detail, const std::string &function);

#endif //SPHERE_LINKED_CONSOLE_HPP
